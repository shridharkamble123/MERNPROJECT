{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer } from './reducer/userLoginReducer';\nimport { orderCreateReducer, orderDetailReducer } from './reducer/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  orderCreate: orderCreateReducer,\n  orderDetail: orderDetailReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage,\n    shippingAddress: shippingAddressStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/shridharkamble/Desktop/Shridhar/nodeJSTutorial/ECommerceMERNWebsite/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","orderCreateReducer","orderDetailReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetail","orderCreate","orderDetail","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,2BAA1D;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAAQC,gBAAR,EAAyBC,mBAAzB,EAA6CC,iBAA7C,QAAqE,4BAArE;AACA,SAAQC,kBAAR,EAA2BC,kBAA3B,QAAoD,wBAApD;AACA,MAAMC,OAAO,GAACZ,eAAe,CAAC;AAC1Ba,EAAAA,WAAW,EAACR,kBADc;AAE1BS,EAAAA,cAAc,EAACV,qBAFW;AAG1BW,EAAAA,IAAI,EAACT,WAHqB;AAI1BU,EAAAA,SAAS,EAACT,gBAJgB;AAK1BU,EAAAA,YAAY,EAACT,mBALa;AAM1BU,EAAAA,UAAU,EAACT,iBANe;AAO1BU,EAAAA,WAAW,EAACT,kBAPc;AAQ1BU,EAAAA,WAAW,EAACT;AARc,CAAD,CAA7B;AAYA,MAAMU,mBAAmB,GAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,EAA5G;AACA,MAAMG,mBAAmB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA5G;AACA,MAAMI,sBAAsB,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAA7H;AACA,MAAMK,YAAY,GAAC;AACfb,EAAAA,IAAI,EAAC;AAACc,IAAAA,SAAS,EAACR,mBAAX;AAAgCS,IAAAA,eAAe,EAACH;AAAhD,GADU;AAEfX,EAAAA,SAAS,EAAC;AAACe,IAAAA,QAAQ,EAACL;AAAV;AAFK,CAAnB;AAKA,MAAMM,UAAU,GAAC,CAAC9B,KAAD,CAAjB;AAEA,MAAM+B,KAAK,GAAElC,WAAW,CAACa,OAAD,EAASgB,YAAT,EAAsBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAAzC,CAAxB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productDetailsReducer, productListReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducer';\nimport {userLoginReducer,userRegisterReducer,userDetailReducer} from './reducer/userLoginReducer';\nimport {orderCreateReducer,orderDetailReducer} from './reducer/orderReducer'\nconst reducer=combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer,\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetail:userDetailReducer,\n    orderCreate:orderCreateReducer,\n    orderDetail:orderDetailReducer,\n});\n\n\nconst cartItemFromStorage=localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : []\nconst userInfoFromStorage=localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressStorage=localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\nconst initialState={\n    cart:{cartItems:cartItemFromStorage, shippingAddress:shippingAddressStorage},\n    userLogin:{userInfo:userInfoFromStorage},\n}\n\nconst middleware=[thunk];\n\nconst store= createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}