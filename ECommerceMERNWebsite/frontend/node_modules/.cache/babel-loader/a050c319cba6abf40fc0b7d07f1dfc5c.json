{"ast":null,"code":"const axios = require(\"axios\");\n\nconst {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAILURE,\n  USER_LOGOUT,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_FAILURE,\n  USER_DETAILS_SUCCESS\n} = require(\"../constants/userLoginConstants\");\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"api/user/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (e) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"api/user/\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (e) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};\nexport const getUserDetail = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Autherization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`api/user/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/shridharkamble/Desktop/Shridhar/nodeJSTutorial/ECommerceMERNWebsite/frontend/src/actions/userAction.js"],"names":["axios","require","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_FAILURE","USER_DETAILS_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","e","response","message","logout","removeItem","register","name","getUserDetail","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Autherization","token","USER_DETAILS_FAILURE"],"mappings":"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","sourcesContent":["const axios = require(\"axios\");\nconst {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAILURE,\n  USER_LOGOUT,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_FAILURE,\n  USER_DETAILS_SUCCESS,\n} = require(\"../constants/userLoginConstants\");\n\nexport const login = (email,password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n    const config={\n      headers:{\n        'Content-Type':'application/json'\n      }\n    }\n\n\n    const { data } = await axios.post(\"api/user/login\",{email,password},config);\n  \n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo',JSON.stringify(data))\n    \n  } catch (e) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload:\n        e.response && e.response.data.message\n          ? e.response.data.message\n          : e.message,\n    });\n  }\n};\n\nexport const logout=()=>(dispatch)=>{\n  localStorage.removeItem('userInfo');\n  dispatch({type:USER_LOGOUT})\n}\n\nexport const register = (name,email,password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n    const config={\n      headers:{\n        'Content-Type':'application/json'\n      }\n    }\n\n\n    const { data } = await axios.post(\"api/user/\",{name,email,password},config);\n  \n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo',JSON.stringify(data))\n    \n  } catch (e) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload:\n        e.response && e.response.data.message\n          ? e.response.data.message\n          : e.message,\n    });\n  }\n};\n\nexport const getUserDetail = (id) => async (dispatch,getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n    const {userLogin:{userInfo}}=getState;\n\n    const config={\n      headers:{\n        'Content-Type':'application/json',\n        Autherization:`Bearer ${userInfo.token}`\n      }\n    }\n\n\n    const { data } = await axios.post(`api/user/${id}`,config);\n  \n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n\n  } catch (e) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload:\n        e.response && e.response.data.message\n          ? e.response.data.message\n          : e.message,\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}