{"ast":null,"code":"import _slicedToArray from\"/Users/shridharkamble/Desktop/Shridhar/nodeJSTutorial/ECommerceMERNWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Row,Button,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import FormContainer from\"../components/FormContainer\";import{saveShippingAddress}from\"../actions/cartAction\";import CheckoutSteps from\"../components/CheckoutSteps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];console.log(shippingAddress);var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push(\"/payment\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping Screen\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter your address\",value:address,required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter your city\",value:city,required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"enter your postalcode\",value:postalCode,required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter your country\",value:country,required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{className:\"my-3\",type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["/Users/shridharkamble/Desktop/Shridhar/nodeJSTutorial/ECommerceMERNWebsite/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Row","Button","Col","useDispatch","useSelector","FormContainer","saveShippingAddress","CheckoutSteps","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","console","log","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Row, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  console.log(shippingAddress);\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n  return (\n    <FormContainer>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n      <h1>Shipping Screen</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"enter your address\"\n            value={address}\n            required={true}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"enter your city\"\n            value={city}\n            required={true}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"enter your postalcode\"\n            value={postalCode}\n            required={true}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"enter your country\"\n            value={country}\n            required={true}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button className=\"my-3\" type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}