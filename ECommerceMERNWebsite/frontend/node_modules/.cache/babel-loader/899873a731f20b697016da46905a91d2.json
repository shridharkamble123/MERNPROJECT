{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst initialState = {\n  cart: cartItemFromStorage\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/shridharkamble/Desktop/Shridhar/nodeJSTutorial/ECommerceMERNWebsite/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducer","reducer","productList","productDetails","cart","cartItemFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,2BAA1D;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,OAAO,GAACP,eAAe,CAAC;AAC1BQ,EAAAA,WAAW,EAACH,kBADc;AAE1BI,EAAAA,cAAc,EAACL,qBAFW;AAG1BM,EAAAA,IAAI,EAACJ;AAHqB,CAAD,CAA7B;AAMA,MAAMK,mBAAmB,GAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,EAA5G;AAEA,MAAMG,YAAY,GAAC;AACfN,EAAAA,IAAI,EAACC;AADU,CAAnB;AAIA,MAAMM,UAAU,GAAC,CAACf,KAAD,CAAjB;AAEA,MAAMgB,KAAK,GAAEnB,WAAW,CAACQ,OAAD,EAASS,YAAT,EAAsBb,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAAzC,CAAxB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productDetailsReducer, productListReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducer';\n\nconst reducer=combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer\n});\n\nconst cartItemFromStorage=localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : []\n\nconst initialState={\n    cart:cartItemFromStorage\n}\n\nconst middleware=[thunk];\n\nconst store= createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}